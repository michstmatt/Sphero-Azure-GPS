<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Validator_NestingOverflow" xml:space="preserve">
    <value>無效的空間資料: 收集類型只支援 {0} 層巢狀。</value>
  </data>
  <data name="Validator_UnexpectedGeometry" xml:space="preserve">
    <value>處理地理形狀時，已經呼叫幾何作業。</value>
  </data>
  <data name="Validator_LineStringNeedsTwoPoints" xml:space="preserve">
    <value>無效的空間資料: 空間類型 "LineString" 必須包含至少兩個點。</value>
  </data>
  <data name="WellKnownText_UnknownTaggedText" xml:space="preserve">
    <value>未知的標記文字 "{0}"。</value>
  </data>
  <data name="GeoJsonReader_MissingRequiredMember" xml:space="preserve">
    <value>無效的 GeoJSON。需要 '{0}' 成員，但找不到。</value>
  </data>
  <data name="WellKnownText_UnexpectedToken" xml:space="preserve">
    <value>必須是具有文字 "{1}" 的 Token 類型 "{0}"，但是找到 "{2}"。</value>
  </data>
  <data name="GmlReader_InvalidSrsName" xml:space="preserve">
    <value>GML 格式不正確: srsName 屬性必須以命名空間 "{0}" 開頭。</value>
  </data>
  <data name="InvalidPointCoordinate" xml:space="preserve">
    <value>值 '{0}' 對座標 '{1}' 而言無效。</value>
  </data>
  <data name="PriorityQueueOperationNotValidOnEmptyQueue" xml:space="preserve">
    <value>作業在空的佇列上無效。</value>
  </data>
  <data name="Validator_InvalidPolygonPoints" xml:space="preserve">
    <value>無效的空間資料: 多邊形環必須包含至少四個點，而且最後一個點必須等於第一個點。</value>
  </data>
  <data name="Validator_InvalidType" xml:space="preserve">
    <value>無效的空間資料: 無效的空間類型 "{0}"。</value>
  </data>
  <data name="GeoJsonReader_InvalidNullElement" xml:space="preserve">
    <value>無效的 GeoJSON。在陣列元素中找到 null 值，但不允許 null。</value>
  </data>
  <data name="GmlReader_ExpectReaderAtElement" xml:space="preserve">
    <value>GML 格式不正確: XmlReader 執行個體必須在 GML 項目的開頭。</value>
  </data>
  <data name="Validator_InvalidLongitudeCoordinate" xml:space="preserve">
    <value>無效的經度座標 {0}。經度座標必須是介於 -15069.0 到 +15069.0 度之間的值</value>
  </data>
  <data name="GmlReader_UnexpectedElement" xml:space="preserve">
    <value>GML 格式不正確: XmlReader 執行個體發現未預期的元素 "{0}"。</value>
  </data>
  <data name="WellKnownText_TooManyDimensions" xml:space="preserve">
    <value>WellKnownTextReader 已設定為只允許兩個維度，但發現第三個維度。</value>
  </data>
  <data name="GeoJsonReader_ExpectedNumeric" xml:space="preserve">
    <value>無效的 GeoJSON。在需要數值的陣列元素中找到非數值。</value>
  </data>
  <data name="PriorityQueueDoesNotContainItem" xml:space="preserve">
    <value>佇列中沒有具有優先順序 {0} 的項目。</value>
  </data>
  <data name="JsonReaderExtensions_CannotReadValueAsJsonObject" xml:space="preserve">
    <value>無法將值 '{0}' 讀取為 JSON 物件。</value>
  </data>
  <data name="Validator_FullGlobeInCollection" xml:space="preserve">
    <value>無效的空間資料: 空間類型 "FullGlobe" 不可以是收集類型的一部分。</value>
  </data>
  <data name="Point_AccessCoordinateWhenEmpty" xml:space="preserve">
    <value>不支援存取空白點的座標屬性。</value>
  </data>
  <data name="Validator_UnexpectedCall2" xml:space="preserve">
    <value>無效的空間資料: 必須呼叫 "{0}" 或 "{1}"，卻呼叫 "{2}"</value>
  </data>
  <data name="JsonReaderExtensions_CannotReadPropertyValueAsString" xml:space="preserve">
    <value>無法將屬性 '{1}' 的值 '{0}' 讀取為具引號的 JSON 字串值。</value>
  </data>
  <data name="GmlReader_InvalidAttribute" xml:space="preserve">
    <value>不支援項目 '{1}' 上的屬性 '{0}'。</value>
  </data>
  <data name="PriorityQueueEnqueueExistingPriority" xml:space="preserve">
    <value>具有相同優先順序的項目已經存在。</value>
  </data>
  <data name="Validator_SridMismatch" xml:space="preserve">
    <value>無效的空間資料: 空間類型執行個體的所有座標只能有一個唯一的 CoordinateSystem。</value>
  </data>
  <data name="Validator_InvalidPointCoordinate" xml:space="preserve">
    <value>無效的空間資料: 座標 ({0} {1} {2} {3}) 無效。</value>
  </data>
  <data name="GeoJsonReader_ExpectedArray" xml:space="preserve">
    <value>無效的 GeoJSON。在需要陣列的陣列元素中找到基本值。</value>
  </data>
  <data name="Validator_FullGlobeCannotHaveElements" xml:space="preserve">
    <value>無效的空間資料: 空間類型 "FullGlobe" 不可以包含數字。</value>
  </data>
  <data name="GmlReader_PosNeedTwoNumbers" xml:space="preserve">
    <value>GML 格式不正確: pos 元素必須包含至少兩個座標。</value>
  </data>
  <data name="Validator_InvalidLatitudeCoordinate" xml:space="preserve">
    <value>無效的緯度座標 {0}。緯度座標必須是介於 -90.0 到 +90.0 度之間的值。</value>
  </data>
  <data name="Validator_UnexpectedGeography" xml:space="preserve">
    <value>處理幾何形狀時，已經呼叫地理作業。</value>
  </data>
  <data name="GeoJsonReader_InvalidTypeName" xml:space="preserve">
    <value>無效的 GeoJSON。值 '{0}' 不是 'type' 成員的有效值。</value>
  </data>
  <data name="GeoJsonReader_InvalidCrsType" xml:space="preserve">
    <value>無效的 GeoJSON。值 '{0}' 不是可辨識的 CRS 類型。</value>
  </data>
  <data name="GeoJsonReader_InvalidCrsName" xml:space="preserve">
    <value>無效的 GeoJSON。值 '{0}' 不是可辨識的 CRS 名稱。</value>
  </data>
  <data name="GmlReader_InvalidSpatialType" xml:space="preserve">
    <value>GML 格式不正確: 未知的空間類型標記 "{0}"。</value>
  </data>
  <data name="SpatialImplementation_NoRegisteredOperations" xml:space="preserve">
    <value>未登錄任何作業。請使用 SpatialImplementation.CurrentImplementation.Operations 屬性提供作業。</value>
  </data>
  <data name="GmlReader_EmptyRingsNotAllowed" xml:space="preserve">
    <value>GML 格式不正確: LinearRing 元素不可以空白。</value>
  </data>
  <data name="WellKnownText_UnexpectedCharacter" xml:space="preserve">
    <value>在文字中找到未預期的字元 '{0}'。</value>
  </data>
  <data name="SpatialBuilder_CannotCreateBeforeDrawn" xml:space="preserve">
    <value>必須等到所有管線呼叫都完成後，產生器才能建立執行個體。</value>
  </data>
  <data name="GeoJsonReader_InvalidPosition" xml:space="preserve">
    <value>無效的 GeoJSON。位置必須包含至少兩個但不超過四個的項目。</value>
  </data>
  <data name="GmlReader_PosListNeedsEvenCount" xml:space="preserve">
    <value>GML 格式不正確: posList 元素必須包含偶數個數的座標。</value>
  </data>
  <data name="Validator_UnexpectedCall" xml:space="preserve">
    <value>無效的空間資料: 必須呼叫 "{0}"，卻呼叫 "{1}"</value>
  </data>
</root>